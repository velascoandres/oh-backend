version: '3.7'
services:
  mysql_db:
    container_name: pimba_mysql
    image: mysql:5.7
    restart: always
    environment:
      # Nombre de la base de datos
      MYSQL_DATABASE: 'prueba'
      # Usuario de la base de datos
      MYSQL_USER: 'pimba_man'
      # Password de la base de datos
      MYSQL_PASSWORD: '12345678'
      # Password del root
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '30501:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    networks:
      - nesjs-network
    volumes:
      - mysql-volume:/var/lib/mysql
  redis_db:
    container_name: pimba_redis
    image: redis:latest
    restart: always
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '30502:6379'
    expose:
      # Opens port 6379 on the container
      - '6379'

    networks:
      - nesjs-network

    volumes:
      - redis-volume:/data
  mongo_db:
    container_name: pimba_mongo
    image: mongo:latest
    restart: always
    environment:
      # Usuario de la base de datos
      MONGO_INITDB_ROOT_USERNAME: 'pimba_man'
      # Password de la base de datos
      MONGO_INITDB_ROOT_PASSWORD: '12345678'
      # Nombre de la Base de datos
      MONGO_INITDB_DATABASE: 'prueba'
      # Root password
      MONGODB_ROOT_PASSWORD: '12345678'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '30503:27017'
    expose:
      # Opens port 27017 on the container
      - '27017'
    networks:
      - nesjs-network
    volumes:
      - mongo-db-volume:/data/db
      - mongo-config-volume:/data/configdb
  dev:
    container_name: open-house-api-dev
    image: open-house-api-dev:1.0.0
    env_file: .env
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS
    depends_on:
      - redis_db
      - mysql_db
      - mongo_db
    build:
      context: .
      target: development
      dockerfile: ./Dockerfile
    command: npm run start:debug
    ports:
      - 8080:8080
      - 9229:9229
    networks:
      - nesjs-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
  prod:
    container_name: open-house-api-prod
    image: open-house-api-prod:1.0.0
    build:
      context: .
      target: production
      dockerfile: ./Dockerfile
    command: npm run start:prod
    ports:
      - 8080:8080
      - 9229:9229
    networks:
      - nesjs-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
# Names our volume

networks:
  nesjs-network:
    driver: bridge

volumes:
  mysql-volume:
  redis-volume:
  mongo-config-volume:
  mongo-db-volume:
